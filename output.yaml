---
# Source: BloodhoundAD/templates/svcappdb.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-db
  namespace: bloodhoundad
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: bloodhound-postgres
---
# Source: BloodhoundAD/templates/svcbh.yaml
apiVersion: v1
kind: Service
metadata:
  name: bloodhound-service
  namespace: bloodhoundad
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: bloodhound
---
# Source: BloodhoundAD/templates/svcgraphdb.yaml
apiVersion: v1
kind: Service
metadata:
  name: graphdb-service
  namespace: bloodhoundad
spec:
  selector:
    app: graphdb
  ports:
    - name: graphdb
      protocol: TCP
      port: 7687
      targetPort: 7687
    - name: http
      protocol: TCP
      port: 7474
      targetPort: 7474
  type: ClusterIP
---
# Source: BloodhoundAD/templates/deployappdb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bloodhound-postgres
  namespace: bloodhoundad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bloodhound-postgres
  template:
    metadata:
      labels:
        app: bloodhound-postgres
    spec:
      containers:
      - name: postgres
        image: docker.io/library/postgres:13.2
        env:
        - name: POSTGRES_USER
          value: "bloodhound"
        - name: POSTGRES_PASSWORD
          value: "bloodhoundcommunityedition"
        - name: POSTGRES_DB
          value: "bloodhound"
        ports:
        - containerPort: 5432
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - bloodhound
            - -d
            - bloodhound
            - -h
            - 127.0.0.1
            - -p
            - "5432"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
---
# Source: BloodhoundAD/templates/deploybh.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bloodhound
  namespace: bloodhoundad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bloodhound
  template:
    metadata:
      labels:
        app: bloodhound
    spec:
      containers:
      - name: bloodhound
        image: docker.io/specterops/bloodhound:latest
        env:
        - name: bhe_disable_cypher_qc
          value: false
        ports:
        - containerPort: 8080
---
# Source: BloodhoundAD/templates/deploygraphdb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphdb
  namespace: bloodhoundad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: graphdb
  template:
    metadata:
      labels:
        app: graphdb
    spec:
      containers:
      - name: neo4j
        image: docker.io/library/neo4j:4.4
        env:
        - name: "NEO4J_AUTH"
          value: "neo4j/bloodhoundcommunityedition"
        - name: "NEO4J_dbms_allow__upgrade"
          value: "true"
        ports:
        - containerPort: 7687
        - containerPort: 7474
        livenessProbe:
          exec:
            command:
            - wget
            - -O
            - /dev/null
            - -q
            - http://localhost:7474
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
---
# Source: BloodhoundAD/templates/nsbloodhound.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: bloodhoundad
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5" # ensures this is executed first
    "helm.sh/hook-delete-policy": before-hook-creation
